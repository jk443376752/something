<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.buy.tsg.mapper.LoginUserMapper" >
  <resultMap id="BaseResultMap" type="com.buy.tsg.entity.LoginUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="logintime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, sex, age, createtime, logintime, ip, department_id, nickname
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_loginuser
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="selectLoginUserByUserName" parameterType="java.lang.String" resultType="com.buy.tsg.entity.LoginUser">
  	select * from t_loginuser where username =#{username}
  </select>
  
  <select id="checkUser" parameterType="com.buy.tsg.entity.LoginUser" resultType="com.buy.tsg.entity.LoginUser">
  	select * from t_loginuser where username=#{username} and password=#{password}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_loginuser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
      <insert id="insertRegisterUser" parameterType="com.buy.tsg.entity.LoginUser">
  	insert into t_loginuser (username,password ,createtime,sex) value(#{username},#{password},#{createtime},#{sex})
  </insert>
  
  <insert id="insert" parameterType="com.buy.tsg.entity.LoginUser" >
    insert into t_loginuser (id, username, password, 
      sex, age, createtime, 
      logintime, ip, department_id, 
      nickname)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{logintime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{nickname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.buy.tsg.entity.LoginUser" >
    insert into t_loginuser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="logintime != null" >
        logintime,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
      <update id="updateLoginUser" parameterType="com.buy.tsg.entity.LoginUser">
  	update t_loginuser set ip = #{ip} ,logintime =#{logintime} where id =#{id}
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.buy.tsg.entity.LoginUser" >
    update t_loginuser
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logintime != null" >
        logintime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.buy.tsg.entity.LoginUser" >
    update t_loginuser
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      logintime = #{logintime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>